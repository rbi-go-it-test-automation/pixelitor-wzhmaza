/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
    id "com.teamscale" version "21.8.0"
    id 'com.github.johnrengelman.shadow' version '7.1.0'
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'com.drewnoakes:metadata-extractor:2.16.0'
    implementation 'org.swinglabs.swingx:swingx-all:1.6.5-1'
    implementation 'net.jafama:jafama:2.3.2'
    implementation 'com.twelvemonkeys.imageio:imageio-jpeg:3.7.0'
    implementation 'com.twelvemonkeys.imageio:imageio-tga:3.7.0'
    implementation 'com.twelvemonkeys.imageio:imageio-pnm:3.7.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation 'org.junit.vintage:junit-vintage-engine:5.8.1'
    testImplementation 'org.mockito:mockito-core:3.12.4'
    testImplementation 'org.assertj:assertj-swing-junit:3.17.1'
    testImplementation 'org.easytesting:fest-util:1.1.2'
}

group = 'pixelitor'
version = '4.3.0'
description = 'pixelitor'

// Please make use of this toolchain feature also in
// your Gradle projects to specify the Java version 
// to use. Setting paths to particular JDK installations
// has shown to be error prone and is not supported by
// some Gradle plugins well.
java {
  toolchain {
    languageVersion.set(JavaLanguageVersion.of(16))
  }
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

jar {
  manifest {
    attributes(
      'Main-Class': 'pixelitor.Pixelitor'
    )
  }
}
